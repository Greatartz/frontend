{"version":3,"file":"index.es.js","sources":["../src/index.js"],"sourcesContent":["import React from 'react';\n\nexport const NODE_HEADING = 'heading';\nexport const NODE_CODEBLOCK = 'code_block';\nexport const NODE_PARAGRAPH = 'paragraph';\nexport const NODE_QUOTE = 'blockquote';\nexport const NODE_OL = 'ordered_list';\nexport const NODE_UL = 'bullet_list';\nexport const NODE_LI = 'list_item';\nexport const NODE_HR = 'horizontal_rule';\nexport const NODE_BR = 'hard_break';\nexport const NODE_IMAGE = 'image';\n\nexport const MARK_BOLD = 'bold';\nexport const MARK_ITALIC = 'italic';\nexport const MARK_STRIKE = 'strike';\nexport const MARK_UNDERLINE = 'underline';\nexport const MARK_CODE = 'code';\nexport const MARK_LINK = 'link';\nexport const MARK_STYLED = 'styled';\n\nexport function render(document, options = {}) {\n    if (\n        typeof document === 'object' &&\n        document.type === 'doc' &&\n        Array.isArray(document.content)\n    ) {\n        const {\n            blokResolvers = {},\n            defaultBlokResolver = () => null,\n            nodeResolvers: customNodeResolvers = {},\n            markResolvers: customMarkResolvers = {},\n        } = options;\n\n        const nodeResolvers = {\n            ...defaultNodeResolvers,\n            ...customNodeResolvers,\n        };\n\n        const markResolvers = {\n            ...defaultMarkResolvers,\n            ...customMarkResolvers,\n        };\n\n        let currentKey = 0;\n\n        const addKey = element =>\n            React.isValidElement(element)\n                ? React.cloneElement(element, { key: currentKey++ })\n                : element;\n\n        const renderNodes = nodes => {\n            const elements = nodes\n                ? nodes.map(renderNode).filter(node => node != null)\n                : null;\n            return Array.isArray(elements) && elements.length === 0\n                ? null\n                : elements;\n        };\n\n        const renderNode = node => {\n            if (node.type === 'blok') {\n                const { body } = node.attrs;\n                return body.map(({ component, ...props }) => {\n                    const resolver = blokResolvers[component];\n                    const element = resolver\n                        ? resolver(props)\n                        : defaultBlokResolver(component, props);\n                    return addKey(element);\n                });\n            } else {\n                let childNode;\n                if (node.type === 'text') {\n                    childNode = node.text;\n                } else {\n                    const resolver = nodeResolvers[node.type];\n                    childNode = resolver\n                        ? addKey(resolver(renderNodes(node.content), node.attrs))\n                        : null;\n                }\n                const marks = node.marks ?? [];\n                return marks.reduceRight((children, mark) => {\n                    const resolver = markResolvers[mark.type];\n                    return resolver\n                        ? addKey(resolver(children, mark.attrs))\n                        : children;\n                }, childNode);\n            }\n        };\n\n        return renderNodes(document.content);\n    } else if (typeof document === 'string') {\n        const { defaultStringResolver = str => str } = options;\n        return defaultStringResolver(document);\n    }\n    return null;\n}\n\nconst simpleNodeResolver = element => children =>\n    children != null ? React.createElement(element, null, children) : null;\n\nconst emptyNodeResolver = element => () =>\n    React.createElement(element);\n\nconst headingNodeResolver = (children, props) =>\n    React.createElement(`h${props.level}`, null, children);\n\nconst imageNodeResolver = (children, props) =>\n    React.createElement('img', props, children);\n\nconst codeblockNodeResolver = (children, props) => {\n    const codeProps = { className: props.class };\n    const code = React.createElement('code', codeProps, children);\n    return React.createElement('pre', null, code);\n};\n\nconst simpleMarkResolver = element => children =>\n    React.createElement(element, null, children);\n\nconst linkMarkResolver = (children, { href, target, linktype }) => {\n    const props = {\n        href: linktype === 'email' ? `mailto:${href}` : href,\n        target,\n    };\n    return React.createElement('a', props, children);\n};\n\nconst styledMarkResolver = (children, props) =>\n    React.createElement('span', { className: props.class }, children);\n\nconst defaultNodeResolvers = {\n    [NODE_HEADING]: headingNodeResolver,\n    [NODE_CODEBLOCK]: codeblockNodeResolver,\n    [NODE_IMAGE]: imageNodeResolver,\n    [NODE_PARAGRAPH]: simpleNodeResolver('p'),\n    [NODE_QUOTE]: simpleNodeResolver('blockquote'),\n    [NODE_OL]: simpleNodeResolver('ol'),\n    [NODE_UL]: simpleNodeResolver('ul'),\n    [NODE_LI]: simpleNodeResolver('li'),\n    [NODE_HR]: emptyNodeResolver('hr'),\n    [NODE_BR]: emptyNodeResolver('br'),\n};\n\nconst defaultMarkResolvers = {\n    [MARK_LINK]: linkMarkResolver,\n    [MARK_STYLED]: styledMarkResolver,\n    [MARK_BOLD]: simpleMarkResolver('b'),\n    [MARK_ITALIC]: simpleMarkResolver('i'),\n    [MARK_STRIKE]: simpleMarkResolver('s'),\n    [MARK_UNDERLINE]: simpleMarkResolver('u'),\n    [MARK_CODE]: simpleMarkResolver('code'),\n};\n"],"names":["NODE_HEADING","NODE_CODEBLOCK","NODE_PARAGRAPH","NODE_QUOTE","NODE_OL","NODE_UL","NODE_LI","NODE_HR","NODE_BR","NODE_IMAGE","MARK_BOLD","MARK_ITALIC","MARK_STRIKE","MARK_UNDERLINE","MARK_CODE","MARK_LINK","MARK_STYLED","render","document","options","type","Array","isArray","content","blokResolvers","defaultBlokResolver","nodeResolvers","customNodeResolvers","markResolvers","customMarkResolvers","defaultNodeResolvers","defaultMarkResolvers","currentKey","addKey","element","React","isValidElement","cloneElement","key","renderNodes","nodes","elements","map","renderNode","filter","node","length","body","attrs","component","props","resolver","childNode","text","marks","reduceRight","children","mark","defaultStringResolver","str","simpleNodeResolver","createElement","emptyNodeResolver","headingNodeResolver","level","imageNodeResolver","codeblockNodeResolver","codeProps","className","class","code","simpleMarkResolver","linkMarkResolver","href","target","linktype","styledMarkResolver"],"mappings":"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"}